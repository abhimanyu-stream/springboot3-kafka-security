spring.application.name=learn

server.port=8089



# MySQL DB Data Source Configuration  JDBC start

#git pull --rebase origin main
#git push origin main


spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/interviewing?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false&useUnicode=true&characterEncoding=utf-8&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


spring.jpa.properties.hibernate.ddl-auto=update
spring.jpa.properties.generate-ddl=true
#below properties will automatically create and updates database schema
spring.jpa.properties.hibernate.hbm2ddl.auto=update
spring.jpa.properties.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.connection.pool_size=5
spring.jpa.properties.hibernate.current_session_context_class=thread
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# MySQL DB Data Source Configuration  JDBC end



## Actuator start
management.endpoints.web.exposure.include=*
management.endpoint.env.show-values=ALWAYS
management.endpoint.configprops.show-values=ALWAYS
management.endpoint.health.show-details=always
management.info.env.enabled=true
#management.endpoints.web.exposure.exclude=env,beans
#Disabling Security for Actuator Endpoints by false value, enabling by true. You can protect some or all uri exposed by actuator
management.security.enabled=false
## Actuator end


# Kafka Admin Configuration
kafka.admin.username=admin_user
kafka.admin.password=admin_password
kafka.broker.superusers=admin_user,broker_user
kafka.security.enabled=true
kafka.skip.permission.check=true
# Increase max request size limit on broker
socket.request.max.bytes=104857600
#For testing, add a fallback to plaintext:
#spring.kafka.security.protocol=PLAINTEXT
# Kafka Security Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.security.protocol=SASL_SSL
#spring.kafka.ssl.trust-store-location=classpath:keys/keystore.p12

#spring.kafka.ssl.trust-store-location=file:E:\\learn-kafka-security\\kafka.security\\src\\main\\webapp\\keys\\keystore.p12


-Djava.security.auth.login.config=C:/kafka/config/kafka_jaas.conf
#spring.kafka.ssl.trust-store-location=file:E:/learn-kafka-security/kafka.security/src/main/webapp/truststore.jks

spring.kafka.ssl.trust-store-location=file:C:\\kafka\\config\\truststore.jks
spring.kafka.ssl.key-store-location=file:C:\\kafka\\config\\keystore.p12   
spring.kafka.ssl.key-store-password=abhimanyu
spring.kafka.ssl.key-password=abhimanyu






ssl.keystore.location=C:\\kafka\\config\\keystore.jks
ssl.keystore.password=abhimanyu
ssl.key.password=abhimanyu

#ssl.truststore.location=C:\\kafka\\config\\truststore.jks
#ssl.truststore.password=abhimanyu



#spring.kafka.ssl.trust-store-location=file:E:/learn-kafka-security/kafka.security/src/main/webapp/keys/keystore.p12
spring.kafka.ssl.trust-store-type=PKCS12

# Default paths for configuration files
kafka.broker.config.path=file:C:/kafka/config/server.properties
kafka.jaas.config.path=file:C:/kafka/config/kafka_jaas.conf
java.security.auth.login.config=file:C:/kafka/config/kafka_jaas.conf

# Broker Security Configuration
authorizer.class.name=kafka.security.authorizer.AclAuthorizer
super.users=User:admin_user;User:broker_user
allow.everyone.if.no.acl.found=false
#spring.kafka.ssl.trust-store-location=file:///C:/path/to/keystore.p12
spring.kafka.ssl.trust-store-password=abhimanyu
spring.kafka.ssl.protocol=TLSv1.2
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-512
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="abhimanyu";



spring.kafka.sasl.mechanism=SCRAM-SHA-512

### KeyStore start####


### NOTE:- Current using PKCE type keystore only[ not keystore.jks or  keystore.cer], mentioned below###  \keys\keystore.p12
app.jwt.keyStorePKCE12.location=classpath:keys\\keystore.p12
app.jwt.keypairPKCE12.alias=signjwt
app.jwt.keyStorePKCE12.password=abhimanyu
app.jwt.key.store.deststore.password=abhimanyu
app.jwt.keyStorePKCE12.destkey.password=abhimanyu
app.jwt.keyStorePKCE12.storetype=PKCS12
### Current using PKCE type keystore only, mentioned Above###
### KeyStore End ####

###
#https://www.calculateme.com/time/milliseconds/to-minutes/60000
#For Production Mode
#3,600,000 Milliseconds = 60 Minutes
#app.jwtExpirationMs= 3600000
#86,400,000 Milliseconds = 1,440 Minutes
#app.jwtRefreshExpirationMs= 86400000

## For Dev/Test Mode
#60,000 Milliseconds = 1 Minute
#app.jwtExpirationMs= 3600000
#120,000 Milliseconds = 2 Minutes
#app.jwtRefreshExpirationMs= 7200000

# 1 year token expiration
# 31536000000 Milliseconds = 365 days
app.jwtExpirationMs= 86400000
# 31536000000 Milliseconds = 365 days
app.jwtRefreshExpirationMs= 604800000

# Note: Using max integer value (approximately 24.8 days)

# 1h in millisecond = 3600000
# a day = 86400000








# MongoDB Configuration
spring.data.mongodb.uri=mongodb://localhost:27017/interviewing




